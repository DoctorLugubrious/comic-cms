NEXT STEPS
	edit comic page autofills and is less buggy

	redo layout of main page, admin page and refine other pages

	set up running production build: be able to run both, create script that does so 

	theme: grab colors from database, not just css files

	if in production, build front end on comic creation


COMIC PAGE
	when loading new page, get new title (and other info) and display
	when loading new page and can't navigate, gray out navigation (?)
		(maybe only if it takes too long? it might flicker otherwise)
		(or show loading spinner?)

	phone rotation (show indicator if comic is wide?)

	automatic bookmarking


OTHER PAGES
	about page
	blog section
	rss feed (use API server to statically generate?)
	main page layout and styling
	lastest comic page
	link to search pagghe


ADMIN PORTION
	re-build static build on add comic
	re-build only needed pages on edit comic (is this possible?)

	account creation / editing

	make adding and editing comics more robust (e.g. if fails)

	edit page actually lists comics (or is linked directly from comic page)

THEMES / CUSTOMIZATION
	custom color themes
	custom button images
	custom fonts
	custom header links (e.g. store, blog, search?, rss)
	favicon
	front page: show latest comic?

MAKE OPEN SOURCE
	automated tests
	open source license
	update README to include more info about database, running, etc
	add contributing guidelines
	add code of conduct

UI layout
	toasts exit button
	footer
	highlight current link in header

OPTIMIZATIONS (MAKE BLAZING FAST)
	static build
	optimize JS/CSS/other size

	test client on 3G

	host images on cdn (?)

	cache necessary information (?)

OTHER TASKS
	usability tests for admin portion
	
	make running production build / installing on server easy

	add video samples in README

	clean up route locations on server

	tag page lazy loading (refactor archives page to be a component?)
	
	add seeds for tags
	
	style autoselect for tags


